#!/bin/bash

if [ -f "template.conf" ]; then
  echo "pi2mqtt_setup template.conf exists, no new one created"
else
  echo "pi2mqtt_setup creating template.conf"
  cat << EOF > template.conf
# template.conf - configuration file to provide to the pi2mqtt tool.  
# This file sets devices up so that pi2mqtt will monitor.

# client ID for the mqtt sensor controller (usually the microcontroller id 
# such as the PI  THIS MUST BE A UNIQUE identifier)
clientid = client$RANDOM


#mqtt broker address
mqttbrokeraddress = "localhost"

#mqtt broker uid
mqttbrokeruid = "mqttpi"

#mqtt broker uid password
mqttbrokerpwd = "password"

# topic for the sensor controller's management port.  
# This will be monitored to provide management messages back to the controller.
mqttsubtopic = "home/+/manage"

# Below is the section for the low temperature NIST temp sensors.  These sensors
# are 2.8K NTC Thermistors. You can have
# multiple sensors, just provide different names and topics.  You must also
# provide the wiringPi pin number.
#tempsensor sensor1 {
# pin = <ADC pin number>
# A = "00e00"
# B = "00e00"
# C = "00e00"
# Rb = 0.0
# location = "<location>"
# mqttpubtopic = "tempsensor"
# sampletime = 1
#}
EOF



  if [ -d /sys/bus/w1/devices ];
  then
    cat << EOF4 >> template.conf
# Below are detected one-wire devices.  If you wish to enable them, update
# the parameters and remove the comment lines.
# Parameters are as follows:
#   address - this is the device directory that was detected for this sensor.
#   location - this is a text field that gives a geographical location for this
#              sensor.  Best not to use spaces as this is part of the topic that
#              is published
#   mqttpubtopic - last level topic for this sensor.  Typically 'temp'
#   sampletime - time in seconds to sample this sensor. Will be sampled at this
#              interval or greater.
#   isfahrenheit - flag to determine the value of temperature to publish

EOF4
    y=0
    for x in /sys/bus/w1/devices/28*
    do
      if [ -d $x ];
      then
        echo "ds18b20 sensor$y {" >> template.conf
        echo " address = \"$x\"" >> template.conf
        echo " location = \"<location>\"" >> template.conf
        echo " mqttpubtopic = \"temp\"" >> template.conf
        echo " sampletime = 1" >> template.conf
        echo " isfahrenheit = 1" >> template.conf
        echo "}" >> template.conf
        echo " " >> template.conf
        y=$((y+1))
      fi
    done
  else
    echo "pi2mqtt_setup - no one wire devices found"
  fi
  if [ -c /dev/ttyUSB0 ];
  then
    cat << EOF1 >> template.conf

# uncomment the next series if you have a RAVEn device attached to the rpi 
# and want to monitor.  Ensure the serial USB is available
#RAVEn raven0 {
# address = "/dev/ttyUSB0"
# mqttpubtopic = "demand"
# location = "location"
#}

EOF1
  else
    echo "pi2mqtt_setup - no USB device found, assuming no RAVEn"
  fi

 
  cat << EOF2 >> template.conf
# uncomment the next series if you have a DHT22/11 device attached to the rpi
# and want to monitor.  Set the pin location if different.
#dht22 dht22 {
# pin = 4
# mqttpubtopic = "home/dht22"
# isfahrenheit = 1
#}

# uncomment next series if you wish to monitor door switches.  You can have
# multiple switches, just provide different names and topics.  You must also
# provide the wiringPi pin number.
#doorswitch door1 {
# pin = <pin number>
# location = "<location>"
# mqttpubtopic = "switchstate"
# sampletime = "1"
#}

# the log file name that will be created if -v or debug mode is set
debuglogfile = "./temp2mqtt.log"

# uncomment the next line if you wish to have debug mode.
#debugmode = 1

EOF2


fi



